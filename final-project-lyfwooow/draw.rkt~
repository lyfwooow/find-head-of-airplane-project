#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 66 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 3736 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"dd.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; draw : Airplane-map -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; Render the airplane map in the scene"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Strategy: Functional Composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 24 3 1 #" "
0 0 14 3 2 #"am"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"above"
0 0 24 3 2 #"  "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 2 #"r1"
0 0 24 3 14 #")             "
0 0 17 3 16 #";49 empty blocks"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"MAP-X"
0 0 24 3 1 #" "
0 0 14 3 5 #"MAP-Y"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"draw-ra"
0 0 24 3 2 #" ("
0 0 14 3 5 #"am-ra"
0 0 24 3 1 #" "
0 0 14 3 2 #"am"
0 0 24 3 23 #"))                     "
0 0 17 3 23 #";draw remaining attempt"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 16 #"REMAIN-ATTEMPT-X"
0 0 24 3 1 #" "
0 0 14 3 16 #"REMAIN-ATTEMPT-Y"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"draw-timer"
0 0 24 3 2 #" ("
0 0 14 3 8 #"am-timer"
0 0 24 3 1 #" "
0 0 14 3 2 #"am"
0 0 24 3 16 #"))              "
0 0 17 3 11 #";draw timer"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 7 #"TIMER-X"
0 0 24 3 1 #" "
0 0 14 3 7 #"TIMER-Y"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"draw-mode"
0 0 24 3 2 #" ("
0 0 14 3 7 #"am-mode"
0 0 24 3 1 #" "
0 0 14 3 2 #"am"
0 0 24 3 17 #"))               "
0 0 17 3 10 #";draw mode"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 6 #"MODE-X"
0 0 24 3 1 #" "
0 0 14 3 6 #"MODE-Y"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"draw-blocks"
0 0 24 3 2 #" ("
0 0 14 3 8 #"am-board"
0 0 24 3 1 #" "
0 0 14 3 2 #"am"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"am-wol"
0 0 24 3 1 #" "
0 0 14 3 2 #"am"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 7 #"am-mode"
0 0 24 3 1 #" "
0 0 14 3 2 #"am"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 18 #"make-initial-world"
0 0 17 3 23 #" (random-airplane-head)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 6 #"random"
0 0 17 3 18 #" RANDOM-DIRECTION)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 8 #"am-board"
0 0 17 3 5 #" am))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; the real test is implemented at bottom"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";(check-equal? ("
0 0 17 3 6 #"draw ("
0 0 17 3 7 #"make-am"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 42 #"                                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 14 #"make-posn 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 15 #"make-posn 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 42 #"                                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 16 #"make-posn 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                             \"normal\""
0 0 24 29 1 #"\n"
0 0 17 3 31 #";                             0"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";                             8"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 30 #"                             ("
0 0 17 3 8 #"make-wol"
0 0 17 3 19 #" \"underway\" -100)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 16130
(4
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 10 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))"
 #") #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 0 40 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"b"
 #"lack\"))) #(struct:translate 40 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 80 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 "
 #"40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) "
 #"#(struct:translate 120 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 160 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 200 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 240 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:trans"
 #"late 0 80 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate "
 #"40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bla"
 #"ck\"))))) #(struct:translate 80 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 200 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))))) #(struct:translate 0 120 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))) #(struct:translate 40 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:p"
 #"ulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate"
 #" 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bl"
 #"ack\"))))) #(struct:translate 120 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 160 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 "
 #"40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))"
 #")) #(struct:translate 200 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0"
 #" 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0"
 #" 40 0 0)) outline \"black\"))))) #(struct:translate 240 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(s"
 #"truct:translate 0 160 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struc"
 #"t:translate 40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 80 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translat"
 #"e 120 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-"
 #"point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \""
 #"black\"))))) #(struct:translate 160 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 200 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 "
 #"0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")"
 #")))) #(struct:translate 240 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 200 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0"
 #") #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(stru"
 #"ct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 120 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 200 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled"
 #"-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 240 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point "
 #"0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 240"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transla"
 #"te 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled"
 #"-point 0 0 40 40 0 0) #(struct:pul"
 #"led-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(stru"
 #"ct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 147.0 0.0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"8\" 0 1 \"black\" 10 #f swiss normal normal #f))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 292.0 0.0 #(struct:"
 #"translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0"
 #" 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 14"
 #".5 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 3.0 5.0 #(struct:text \"n\" 0 1 \"black\" 10 #"
 #"f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:tran"
 #"slate 3.0 5.0 #(struct:text \"o\" 0 1 \"black\" 10 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 12.0 0.0 #(struct:translate 1.5 5.0"
 #" #(struct:text \"r\" 0 1 \"black\" 10 #f swiss normal normal #f)))))"
 #" #(struct:translate 15.0 0.0 #(struct:translate 4.0 5.0 #(struct:tex"
 #"t \"m\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 23.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"a\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 29.0 0.0 #(struct:translate 1.0 5.0 #(s"
 #"truct:text \"l\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 90 130 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #"
 #"(struct:pulled-point 0 0 0 40 0 0)) 255 \"Grey\"))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 90 170 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulle"
 #"d-point 0 0 0 40 0 0)) 255 \"Blue\"))) #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 300 0 0 0) #(struct:pulled-point 0 0 300"
 #" 300 0 0) #(struct:pulled-point 0 0 0 300 0 0)) 255 \"White\")))))))"
 #"))))))))))))))))))) #(struct:bb 300 300 300.0) #f)"
) 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"draw"
0 0 17 3 2 #" ("
0 0 17 3 7 #"make-am"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #" 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 42 #"                                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-posn "
0 0 17 3 1 #"1"
0 0 17 3 3 #" 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 10 #"make-posn "
0 0 17 3 1 #"2"
0 0 17 3 3 #" 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #" 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 3 #" 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 3 #" 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #" 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #" 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #" 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 4 #" 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 42 #"                                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #" 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #" 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #" 2)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 5 #" 0)))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                             \"cheat\""
0 0 24 29 1 #"\n"
0 0 17 3 31 #";                             0"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";                             6"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 30 #"                             ("
0 0 17 3 8 #"make-wol"
0 0 17 3 1 #" "
0 0 17 3 10 #"\"underway\""
0 0 17 3 8 #" -100)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 17924
(5
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 10 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))"
 #") #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 0 40 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"b"
 #"lack\"))) #(struct:translate 40 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 80 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 "
 #"40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) "
 #"#(struct:translate 120 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 160 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 200 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 240 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:trans"
 #"late 0 80 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate "
 #"40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bla"
 #"ck\"))))) #(struct:translate 80 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 200 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))))) #(struct:translate 0 120 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))) #(struct:translate 40 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:p"
 #"ulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate"
 #" 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bl"
 #"ack\"))))) #(struct:translate 120 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 160 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 "
 #"40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))"
 #")) #(struct:translate 200 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0"
 #" 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0"
 #" 40 0 0)) outline \"black\"))))) #(struct:translate 240 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(s"
 #"truct:translate 0 160 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struc"
 #"t:translate 40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 80 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translat"
 #"e 120 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-"
 #"point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \""
 #"black\"))))) #(struct:translate 160 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 200 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 "
 #"0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")"
 #")))) #(struct:translate 240 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 200 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0"
 #") #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(stru"
 #"ct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 120 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 200 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled"
 #"-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 240 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point "
 #"0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 240"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transla"
 #"te 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled"
 #"-point 0 0 40 40 0 0) #(struct:pul"
 #"led-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(stru"
 #"ct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 147.0 0.0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"6\" 0 1 \"black\" 10 #f swiss normal normal #f))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 292.0 0.0 #(struct:"
 #"translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0"
 #" 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 17"
 #".0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 2.5 5.0 #(struct:t"
 #"ext \"c\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:tra"
 #"nslate 5.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"h\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))))) #(struct:translate 11.0 0."
 #"0 #(struct:translate 3.0 5.0 #(struct:text \"e\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))))) #(struct:translate 17.0 0.0 #(struct:tr"
 #"anslate 3.0 5.0 #(struct:text \"a\" 0 1 \"black\" 10 #f swiss normal"
 #" normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 1.5 5"
 #".0 #(struct:text \"t\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 147.0 145.0 #(s"
 #"truct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:p"
 #"oint 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 130 130 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pul"
 #"led-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \""
 #"Red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 67.0 185."
 #"0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(str"
 #"uct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 50 170 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct"
 #":pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 25"
 #"5 \"Blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 3"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 107."
 #"0 105.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 90 90 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(s"
 #"truct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0"
 #")) 255 \"Grey\"))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:poin"
 #"t 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 27.0 25.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"blac"
 #"k\" 10 #f swiss normal normal #f))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 3"
 #"00) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 10 10 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) "
 #"#(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 "
 #"0 0)) 255 \"Grey\"))) #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 300 0 0 0) #(struct:pulled-point 0 0 300 300 0 0) #(struc"
 #"t:pulled-point 0 0 0 300 0 0)) 255 \"White\"))))))))))))))))))))))))"
 #")))))))))))))))))))))))))) #(struct:bb 300 300 300.0) #f)"
) 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 13 #"check-expect?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"draw"
0 0 17 3 2 #" ("
0 0 17 3 7 #"make-am"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 43 #"                                          ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 43 #"                                          ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 2 5)))"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";                              \"possibility\""
0 0 24 29 1 #"\n"
0 0 17 3 32 #";                              0"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";                              8"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 31 #"                              ("
0 0 17 3 8 #"make-wol"
0 0 17 3 19 #" \"underway\" -100)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"               "
0 6           4 17 70343
(6
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 10 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))"
 #") #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 0 40 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"b"
 #"lack\"))) #(struct:translate 40 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 80 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 "
 #"40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) "
 #"#(struct:translate 120 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 160 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 200 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 240 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:trans"
 #"late 0 80 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate "
 #"40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bla"
 #"ck\"))))) #(struct:translate 80 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 200 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))))) #(struct:translate 0 120 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))) #(struct:translate 40 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:p"
 #"ulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate"
 #" 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bl"
 #"ack\"))))) #(struct:translate 120 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 160 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 "
 #"40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))"
 #")) #(struct:translate 200 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0"
 #" 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0"
 #" 40 0 0)) outline \"black\"))))) #(struct:translate 240 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(s"
 #"truct:translate 0 160 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struc"
 #"t:translate 40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 80 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translat"
 #"e 120 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-"
 #"point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \""
 #"black\"))))) #(struct:translate 160 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 200 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 "
 #"0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")"
 #")))) #(struct:translate 240 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 200 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0"
 #") #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(stru"
 #"ct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 120 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 200 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled"
 #"-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 240 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point "
 #"0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 240"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transla"
 #"te 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled"
 #"-point 0 0 40 40 0 0) #(struct:pul"
 #"led-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(stru"
 #"ct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 147.0 0.0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"8\" 0 1 \"black\" 10 #f swiss normal normal #f))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 292.0 0.0 #(struct:"
 #"translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0"
 #" 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 8."
 #"0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 3.0 5.0 #(struct:text \"p\" 0 1 \"black\" 10 #f swi"
 #"ss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate"
 #" 3.0 5.0 #(struct:text \"o\" 0 1 \"black\" 10 #f swiss normal normal"
 #" #f))))) #(struct:translate 12.0 0.0 #(struct:translate 2.5 5.0 #(st"
 #"ruct:text \"s\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 17.0 0.0 #(struct:translate 2.5 5.0 #(struct:text \"s"
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translat"
 #"e 22.0 0.0 #(struct:translate 1.0 5.0 #(struct:text \"i\" 0 1 \"blac"
 #"k\" 10 #f swiss normal normal #f))))) #(struct:translate 24.0 0.0 #("
 #"struct:translate 3.0 5.0 #(struct:text \"b\" 0 1 \"black\" 10 #f swi"
 #"ss normal normal #f))))) #(struct:translate 30.0 0.0 #(struct:transl"
 #"ate 1.0 5.0 #(struct:text \"i\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 32.0 0.0 #(struct:translate 1.0 5.0 #"
 #"(struct:text \"l\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #"
 #"(struct:translate 34.0 0.0 #(struct:translate 1.0 5.0 #(struct:text "
 #"\"i\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:trans"
 #"late 36.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \"t\" 0 1 \"b"
 #"lack\" 10 #f swiss normal normal #f))))) #(struct:translate 39.0 0.0"
 #" #(struct:translate 2.5 5.0 #(struct:text \"y\" 0 1 \"black\" 10 #f "
 #"swiss normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(st"
 #"ruct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 50 170 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 2"
 #"55 \"Blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 "
 #"300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 90 "
 #"210 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Grey\"))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 27.0 25.0 #(stru"
 #"ct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:poin"
 #"t 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 10 10 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White"
 #"\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 19.5 65.0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal"
 #" #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struc"
 #"t:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struc"
 #"t:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0"
 #" 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 15"
 #".0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" "
 #"10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300"
 #") #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 10 50 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #("
 #"struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 "
 #"0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:po"
 #"int 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 16.5 105.0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(str"
 #"uct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #(str"
 #"uct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \"black\" 10 #f swiss "
 #"normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:translate"
 #" 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal"
 #" #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 10 90 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 19.5 145.0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 "
 #"#(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #("
 #"struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \""
 #".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:transla"
 #"te 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \"blac"
 #"k\" 10 #f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #("
 #"struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swi"
 #"ss normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struc"
 #"t:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 10 130 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:p"
 #"ulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 "
 #"\"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 30"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 16.5 "
 #"185.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:te"
 #"xt \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:tran"
 #"slate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"b"
 #"lack\" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 "
 #"#(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" 10 #f s"
 #"wiss normal normal #f))))) #(struct:translate 15.0 0.0 #(struct:tran"
 #"slate 3.0 5.0 #(struct:text \"2\" 0 1 \"black\" 10 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 21.0 0.0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f)))))"
 #" #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 10 170 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0)"
 #" #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 19.5 225.0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struc"
 #"t:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:"
 #"translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 "
 #"0.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 "
 #"#f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #(struct:"
 #"translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point"
 #" 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"10 210 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White"
 #"\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 27.0 265.0 #"
 #"(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f sw"
 #"iss normal normal #f))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct"
 #":point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 10 250 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pu"
 #"lled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 59.5 25.0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate 6."
 #"0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 1"
 #"0 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct"
 #":translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3."
 #"0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f"
 #"))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 50 10 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 4"
 #"0 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 30"
 #"0 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 59.5 65.0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(st"
 #"ruct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(stru"
 #"ct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" "
 #"0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 9"
 #".0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" "
 #"10 #f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #(stru"
 #"ct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:po"
 #"int 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 50 50 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled"
 #"-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Whi"
 #"te\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 62.5 105.0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"bl"
 #"ack\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(s"
 #"truct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 50 90 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 "
 #"40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 59.5 145.0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #"
 #"(struct:translate 6.0 0.0 #(struct"
 #":translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0"
 #" 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f swiss normal normal #f)"
 #")))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct"
 #":text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300"
 #" 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 50 130 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(stru"
 #"ct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct"
 #":point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 56.5 225.0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate "
 #"1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal "
 #"#f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(stru"
 #"ct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"21.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 50 210 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40"
 #" 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300"
 #" 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 56.5 265.0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #") #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:tex"
 #"t \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))))) #(struct:translate 15.0 0."
 #"0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:tr"
 #"anslate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal"
 #" normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0"
 #" 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 50"
 #" 250 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\""
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 102.5 25.0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #") #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:tex"
 #"t \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point"
 #" 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 90 10 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(s"
 #"truct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 96.5 65.0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #") #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:tex"
 #"t \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))))) #(struct:translate 15.0 0."
 #"0 #(struct:translate 3.0 5.0 #(struct:text \"7\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:tr"
 #"anslate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal"
 #" normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0"
 #" 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 90"
 #" 50 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 96.5 105.0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0"
 #" 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 "
 #"0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 "
 #"#f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"2\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 21.0 0.0 #(struct:translate 3.0 5.0 #(struct:"
 #"text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:"
 #"translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 "
 #"0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 90 90 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 96.5 145.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss "
 #"normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1."
 #"5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f"
 #"))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct"
 #":text \"6\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct"
 #":translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0"
 #" 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 21"
 #".0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" "
 #"10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300"
 #") #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 90 130 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #"
 #"(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0"
 #" 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:p"
 #"oint 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 96.5 185.0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #("
 #"struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(st"
 #"ruct:translate 6.0 0.0 #(struct:t"
 #"ranslate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5"
 #".0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #")) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"2\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 21.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:po"
 #"int 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 90 170 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 96.5 265.0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal"
 #" #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struc"
 #"t:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struc"
 #"t:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0"
 #" 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 15"
 #".0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \"black\" "
 #"10 #f swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(stru"
 #"ct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:po"
 #"int 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 90 250 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Wh"
 #"ite\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 139.5 25."
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal no"
 #"rmal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(s"
 #"truct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1"
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translat"
 #"e 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"blac"
 #"k\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300"
 #" 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 130 10 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 "
 #"0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 "
 #"40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(stru"
 #"ct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 139.5 65.0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #"
 #"f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:tran"
 #"slate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 "
 #"#(struct:text \"3\" 0 1 \"black\" 10 #f swiss normal normal #f))))) "
 #"#(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text"
 #" \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #"
 #"(struct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 130 50 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pu"
 #"lled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:poin"
 #"t 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 139.5 105.0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" "
 #"0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate 6.0"
 #" 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10"
 #" #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:"
 #"translate 3.0 5.0 #(struct:text \"6\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0"
 #" 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f)"
 #")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(str"
 #"uct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 130 90 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 4"
 #"0 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 30"
 #"0 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 142.5 145.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f sw"
 #"iss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translat"
 #"e 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(st"
 #"ruct:text \"8\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 130 130 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #"
 #"(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:transl"
 #"ate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(s"
 #"truct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 139.5 185.0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:tra"
 #"nslate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0"
 #" #(struct:translate 3.0 5.0 #(struct:text \"6\" 0 1 \"black\" 10 #f "
 #"swiss normal normal #f))))) #(struct:translate 15.0 0.0 #(struct:tra"
 #"nslate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal "
 #"normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 "
 #"300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 130"
 #" 170 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\""
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 139.5 225.0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal"
 #" #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struc"
 #"t:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struc"
 #"t:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0"
 #" 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 15"
 #".0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" "
 #"10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300"
 #") #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 130 210 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) "
 #"#(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 "
 #"0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:"
 #"point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 139.5 265.0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f "
 #"swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:transl"
 #"ate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #("
 #"struct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #("
 #"struct:translate 15.0 0.0 #(struct"
 #":translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:poin"
 #"t 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 130 250 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled"
 #"-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Whi"
 #"te\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 176.5 25.0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate"
 #" 6.0 0.0 #(struct:translate 1.5 "
 #"5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 21.0"
 #" 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10"
 #" #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) "
 #"#(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 170 10 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(s"
 #"truct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0"
 #")) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:poi"
 #"nt 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 182.5 65.0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate"
 #" 6.0 0.0 #(struct:translate 1.5 "
 #"5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"3\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0"
 #") #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 170 50 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 179.5 105.0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0"
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate "
 #"6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(stru"
 #"ct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate "
 #"3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal "
 #"#f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 170 90 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 179.5 145.0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #"
 #"(struct:translate 6.0 0.0 #(struct"
 #":translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0"
 #" 5.0 #(struct:text \"6\" 0 1 \"black\" 10 #f swiss normal normal #f)"
 #")))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct"
 #":text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300"
 #" 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 170 130 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(str"
 #"uct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struc"
 #"t:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 179.5 185.0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text "
 #"\"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:transla"
 #"te 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"blac"
 #"k\" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(s"
 #"truct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))))) #(struct:translate 15.0 0.0 #(struct:transla"
 #"te 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal norm"
 #"al #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 170 170"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0"
 #" 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 182.5 225.0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 1"
 #"0 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:t"
 #"ranslate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5"
 #".0 #(struct:text \"3\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 170 210 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40"
 #" 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300"
 #" 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 179.5 265.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(str"
 #"uct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #(str"
 #"uct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss "
 #"normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:p"
 #"oint 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 170 250 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pul"
 #"led-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \""
 #"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 219.5 2"
 #"5.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal "
 #"normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #"
 #"(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #"
 #"(struct:translate 9.0 0.0 #(struct"
 #":translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3."
 #"0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f"
 #"))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 210 10 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 "
 #"40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 3"
 #"00 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 219.5 65.0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #("
 #"struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(st"
 #"ruct:translate 6.0 0.0 #(struct:t"
 #"ranslate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5"
 #".0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #")) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0"
 #") #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 210 50 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 222.5 105.0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal norm"
 #"al #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(str"
 #"uct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(str"
 #"uct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struc"
 #"t:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 210 90 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 "
 #"300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 219.5 145.0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #"
 #"(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f sw"
 #"iss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:transl"
 #"ate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #"
 #"(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 210 130 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0"
 #") #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) "
 #"#(struct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 222.5 185.0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5"
 #" 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f)"
 #")))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:"
 #"text \"3\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:"
 #"translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 "
 #"0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 210 170 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(stru"
 #"ct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct"
 #":point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 219.5 225.0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct"
 #":translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5"
 #".0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #")) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:te"
 #"xt \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 "
 #"\"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:poi"
 #"nt 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 210 210 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 216.5 265.0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(stru"
 #"ct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" "
 #"0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 1"
 #"5.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"7\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(str"
 #"uct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss "
 #"normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:p"
 #"oint 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 210 250 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pul"
 #"led-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \""
 #"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 267.0 2"
 #"5.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 "
 #"#f swiss normal normal #f))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(s"
 #"truct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 250 10 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point "
 #"0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 2"
 #"59.5 65.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5"
 #" 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f)"
 #")))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:"
 #"text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:"
 #"translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 "
 #"1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 250 50 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poin"
 #"t 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300"
 #") #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 262.5 105.0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #"
 #"(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(s"
 #"truct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \"."
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translat"
 #"e 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \"black"
 #"\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 "
 #"300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 250 90 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struc"
 #"t:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 256.5 145.0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5."
 #"0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) "
 #"#(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text "
 #"\".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:trans"
 #"late 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \"bl"
 #"ack\" 10 #f swiss normal normal #f))))) #(struct:translate 15.0 0.0 "
 #"#(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \"black\" 10 #f s"
 #"wiss normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:tran"
 #"slate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 3"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 250 "
 #"130 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 262.5 185.0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #") #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:tex"
 #"t \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point"
 #" 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 250 170 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40"
 #" 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0"
 #" 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #"
 #"(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 256.5 225.0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal "
 #"#f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct"
 #":text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct"
 #":translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 "
 #"1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 15."
 #"0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \"black\" 1"
 #"0 #f swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(struc"
 #"t:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:poi"
 #"nt 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 250 210 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Wh"
 #"ite\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 267.0 265"
 #".0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #"
 #"f swiss normal normal #f))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(st"
 #"ruct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 250 250 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"255 \"White\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 300 0 0 0) #(struct:pulled-point 0 0 300 300 0 0) #(struct:pul"
 #"led-point 0 0 0 300 0 0)) 255 \"White\")))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))) #(struct:bb 300 300 300.0) #f)"
) 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #" ("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 4 #"draw"
0 0 17 3 2 #" ("
0 0 17 3 7 #"make-am"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 42 #"                                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 42 #"                                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"                                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 4 6)))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                             \"normal\""
0 0 24 29 1 #"\n"
0 0 17 3 31 #";                             0"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";                             8"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 30 #"                             ("
0 0 17 3 8 #"make-wol"
0 0 17 3 19 #" \"underway\" -100)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 19312
(7
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 10 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))"
 #") #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 0 40 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"b"
 #"lack\"))) #(struct:translate 40 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 80 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 "
 #"40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) "
 #"#(struct:translate 120 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 160 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 200 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 240 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:trans"
 #"late 0 80 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate "
 #"40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bla"
 #"ck\"))))) #(struct:translate 80 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 200 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))))) #(struct:translate 0 120 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))) #(struct:translate 40 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:p"
 #"ulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate"
 #" 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bl"
 #"ack\"))))) #(struct:translate 120 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 160 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 "
 #"40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))"
 #")) #(struct:translate 200 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0"
 #" 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0"
 #" 40 0 0)) outline \"black\"))))) #(struct:translate 240 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(s"
 #"truct:translate 0 160 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struc"
 #"t:translate 40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 80 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translat"
 #"e 120 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-"
 #"point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \""
 #"black\"))))) #(struct:translate 160 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 200 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 "
 #"0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")"
 #")))) #(struct:translate 240 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 200 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0"
 #") #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(stru"
 #"ct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 120 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 200 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled"
 #"-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 240 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point "
 #"0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 240"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transla"
 #"te 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled"
 #"-point 0 0 40 40 0 0) #(struct:pul"
 #"led-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(stru"
 #"ct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 147.0 0.0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"8\" 0 1 \"black\" 10 #f swiss normal normal #f))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 292.0 0.0 #(struct:"
 #"translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0"
 #" 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 14"
 #".5 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 3.0 5.0 #(struct:text \"n\" 0 1 \"black\" 10 #"
 #"f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:tran"
 #"slate 3.0 5.0 #(struct:text \"o\" 0 1 \"black\" 10 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 12.0 0.0 #(struct:translate 1.5 5.0"
 #" #(struct:text \"r\" 0 1 \"black\" 10 #f swiss normal normal #f)))))"
 #" #(struct:translate 15.0 0.0 #(struct:translate 4.0 5.0 #(struct:tex"
 #"t \"m\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 23.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"a\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 29.0 0.0 #(struct:translate 1.0 5.0 #(s"
 #"truct:text \"l\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 130 130 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) 255 \"Red\"))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 50 170 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulle"
 #"d-point 0 0 0 40 0 0)) 255 \"Blue\"))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 30"
 #"0 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 90 170 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0"
 #" 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0"
 #" 40 0 0)) 255 \"Blue\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(stru"
 #"ct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 130 170 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct"
 #":pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 25"
 #"5 \"Blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 3"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 170 "
 #"170 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Blue\"))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 210 170 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 "
 #"0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Blue\"))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0"
 #") #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 130 210 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) 255 \"Blue\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 90 250 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poin"
 #"t 0 0 0 40 0 0)) 255 \"Blue\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 130 250 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #"
 #"(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0"
 #" 0)) 255 \"Blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:po"
 #"int 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 170 250 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"B"
 #"lue\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30"
 #"0 0 0 0) #(struct:pulled-point 0 0 300 300 0 0) #(struct:pulled-poin"
 #"t 0 0 0 300 0 0)) 255 \"White\")))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))) #(struct:bb 300 300 300.0) #f)"
) 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; draw-timer : Number -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; helper: To print timer in the screen"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Strategy: Strcut Decomp"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-timer"
0 0 24 3 1 #" "
0 0 14 3 5 #"timer"
0 0 24 3 17 #")                "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 5 #"timer"
0 0 24 3 2 #") "
0 0 14 3 11 #"NUMBER-SIZE"
0 0 24 3 1 #" "
0 0 14 3 12 #"NUMBER-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-timer"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 127
(8
 #"(#(struct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f "
 #"swiss normal normal #f)) #(struct:bb 6.0 10.0 7.7001953125) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; draw-mode : Mode -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; helper: To print mode in the screen"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Strategy: Strcut Decomp"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-mode"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 17 #")                "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 11 #"NUMBER-SIZE"
0 0 24 3 1 #" "
0 0 14 3 12 #"NUMBER-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-mode"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"normal\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 922
(9
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 3.0 5.0 #(struct:text \"n\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate "
 #"3.0 5.0 #(struct:text \"o\" 0 1 \"black\" 10 #f swiss normal normal "
 #"#f))))) #(struct:translate 12.0 0.0 #(struct:translate 1.5 5.0 #(str"
 #"uct:text \"r\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(str"
 #"uct:translate 15.0 0.0 #(struct:t"
 #"ranslate 4.0 5.0 #(struct:text \"m\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"a\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 29.0 0.0 #(struct:translate 1.0 5.0 #(struct:"
 #"text \"l\" 0 1 \"black\" 10 #f swiss normal normal #f)))) #(struct:b"
 #"b 31.0 10.0 7.7001953125) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; draw-ra : Number -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; helper: To print remaining attempts in the screen"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Strategy: Strcut Decomp"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ra"
0 0 24 3 1 #" "
0 0 14 3 2 #"ra"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 2 #"ra"
0 0 24 3 2 #") "
0 0 14 3 11 #"NUMBER-SIZE"
0 0 24 3 1 #" "
0 0 14 3 12 #"NUMBER-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"draw-ra"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 6           4 21 286
(10
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 "
 #"#(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))) #("
 #"struct:translate 6.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"0\" 0 1 \"black\" 10 #f swiss normal normal #f)))) #(struct:bb 12.0 "
 #"10.0 7.7001953125) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;draw-blocks : Board Win-or-lose Natural Mode-> Image"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;To draw the block and animation in the map"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;Strategy: Struct Decomp"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-blocks"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 3 #"wol"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"wol-result"
0 0 24 3 1 #" "
0 0 14 3 3 #"wol"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"underway\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 20 #"draw-revealed-blocks"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 3 #")] "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"wol-result"
0 0 24 3 1 #" "
0 0 14 3 3 #"wol"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"win\""
0 0 24 3 3 #") ("
0 0 14 3 13 #"win-animation"
0 0 24 3 1 #" "
0 0 14 3 3 #"wol"
0 0 24 3 6 #")]    "
0 0 17 3 20 #";how to check struct"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"lose-animation"
0 0 24 3 1 #" "
0 0 14 3 3 #"wol"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 11 #"draw-blocks"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 28 #"                           ("
0 0 17 3 8 #"make-wol"
0 0 17 3 17 #" \"underway\" -100)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                           \"normal\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 1027
(11
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 90 130 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poin"
 #"t 0 0 0 40 0 0)) 255 \"Grey\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 90 170 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #("
 #"struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 "
 #"0)) 255 \"Blue\"))) #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 300 0 0 0) #(struct:pulled-point 0 0 300 300 0 0) #(struct:"
 #"pulled-point 0 0 0 300 0 0)) 255 \"White\")))))))))) #(struct:bb 300"
 #" 300 300) #f)"
) 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 11 #"draw-blocks"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 28 #"                           ("
0 0 17 3 8 #"make-wol"
0 0 17 3 17 #" \"underway\" -100)"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";                           \"possibility\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 53336
(12
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 90 130 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poin"
 #"t 0 0 0 40 0 0)) 255 \"Grey\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 90 170 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #("
 #"struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 "
 #"0)) 255 \"Blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:poi"
 #"nt 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 27.0 25.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"bla"
 #"ck\" 10 #f swiss normal normal #f))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 "
 #"300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 10 10 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct"
 #":point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 19.5 65.0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f s"
 #"wiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:transla"
 #"te 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal norm"
 #"al #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 10 50 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled"
 #"-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 30"
 #"0 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 16.5 105.0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal "
 #"normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #"
 #"(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #"
 #"(struct:translate 9.0 0.0 #(struct"
 #":translate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3."
 #"0 5.0 #(struct:text \"2\" 0 1 \"black\" 10 #f swiss normal normal #f"
 #"))))) #(struct:translate 21.0 0.0 #(struct:translate 3.0 5.0 #(struc"
 #"t:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 30"
 #"0 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 10 90 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(stru"
 #"ct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct"
 #":point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 19.5 145.0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate"
 #" 6.0 0.0 #(struct:translate 1.5 "
 #"5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:po"
 #"int 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 10 130 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 16.5 185.0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal"
 #" #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struc"
 #"t:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struc"
 #"t:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0"
 #" 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 15"
 #".0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \"black\" "
 #"10 #f swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(stru"
 #"ct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:po"
 #"int 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 10 170 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Wh"
 #"ite\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 19.5 225."
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal no"
 #"rmal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(s"
 #"truct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"0"
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translat"
 #"e 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"blac"
 #"k\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300"
 #" 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 10 210 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 "
 #"0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 "
 #"40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(stru"
 #"ct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 27.0 265.0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 "
 #"1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:poi"
 #"nt 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 10 250 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point "
 #"0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) "
 #"#(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 59.5 25.0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct"
 #":translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0"
 #" 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f)"
 #")))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct"
 #":text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300"
 #" 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 50 10 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:"
 #"point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 59.5 65.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0"
 #" #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f)))))"
 #" #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text"
 #" \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point"
 #" 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 50 50 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(s"
 #"truct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 62.5 105.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struc"
 #"t:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:"
 #"translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 "
 #"0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 "
 #"#f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #"
 #"(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 50 90 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0))"
 #" 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point"
 #" 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"59.5 145.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss "
 #"normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1."
 #"5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f"
 #"))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct"
 #":text \"3\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct"
 #":translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0"
 #" 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:"
 #"point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 50 130 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 30"
 #"0) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 62.5 185.0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #"
 #"(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(s"
 #"truct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \"."
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translat"
 #"e 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"black"
 #"\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 "
 #"300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 50 170 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struc"
 #"t:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 59.5 225.0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:trans"
 #"late 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #"
 #"(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #"
 #"(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text "
 #"\"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:trans"
 #"late 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #("
 #"struct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 50 210 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pul"
 #"led-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point"
 #" 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 59.5 265.0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 "
 #"1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0"
 #".0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #"
 #"f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:tr"
 #"anslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal"
 #" normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5"
 #".0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 50 250 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 "
 #"0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:"
 #"translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 "
 #"0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 96.5 25.0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" "
 #"10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:"
 #"translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:"
 #"text \"2\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:"
 #"translate 21.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 "
 #"1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 90 10 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 102.5 65.0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(str"
 #"uct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 30"
 #"0) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 90 50 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #"
 #"(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0"
 #" 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:p"
 #"oint 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 99.5 105.0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f sw"
 #"iss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translat"
 #"e 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(st"
 #"ruct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5"
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(str"
 #"uct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 90 90 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-"
 #"point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300"
 #" 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 102.5 225.0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5"
 #".0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #" #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text"
 #" \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"b"
 #"lack\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point "
 #"300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 90 210 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(s"
 #"truct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 96.5 265.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0"
 #" 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f)"
 #")) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:te"
 #"xt \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 9.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"2\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 21.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 90 250 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulle"
 #"d-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 3"
 #"00 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 139.5 25.0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 "
 #"\"black\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0"
 #" #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f "
 #"swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:tran"
 #"slate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f)))))"
 #" #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 130 10 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0)"
 #" #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 139.5 65.0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struc"
 #"t:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:"
 #"translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 "
 #"0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 "
 #"#f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #(struct:"
 #"translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point"
 #" 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"130 50 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White"
 #"\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 139.5 105.0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal norm"
 #"al #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(str"
 #"uct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(str"
 #"uct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"6\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"15.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 130 90 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40"
 #" 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300"
 #" 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 142.5 145.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swi"
 #"ss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:translate"
 #" 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal"
 #" #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(str"
 #"uct:text \"8\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(str"
 #"uct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 130 130 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #("
 #"struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 139.5 185.0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:te"
 #"xt \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:tran"
 #"slate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"b"
 #"lack\" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 "
 #"#(struct:translate 3.0 5.0 #(struct:text \"6\" 0 1 \"black\" 10 #f s"
 #"wiss normal normal #f))))) #(struct:translate 15.0 0.0 #(struct:tran"
 #"slate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 3"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 130 "
 #"170 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 139.5 225.0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal "
 #"#f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct"
 #":text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct"
 #":translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0 "
 #"1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 15."
 #"0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 1"
 #"0 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 130 210 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #"
 #"(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0"
 #" 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:p"
 #"oint 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 139.5 265.0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f s"
 #"wiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:transla"
 #"te 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal norm"
 #"al #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 130 250 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pull"
 #"ed-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point "
 #"300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 176.5 25.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0"
 #" #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f)))))"
 #" #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text"
 #" \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1 \""
 #"black\" 10 #f swiss normal normal #f))))) #(struct:translate 21.0 0."
 #"0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(s"
 #"truct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 170 10 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point "
 #"0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 1"
 #"82.5 65.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate 6."
 #"0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 1"
 #"0 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct"
 #":translate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:poin"
 #"t 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 170 50 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-"
 #"point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Whit"
 #"e\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 179.5 105.0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(st"
 #"ruct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 9.0 0.0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 170 90 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40"
 #" 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300"
 #" 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 179.5 145.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(str"
 #"uct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"6\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #(str"
 #"uct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss "
 #"normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:p"
 #"oint 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 170 130 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pul"
 #"led-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \""
 #"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 179.5 1"
 #"85.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal"
 #" normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 "
 #"#(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) "
 #"#(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text "
 #"\"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:trans"
 #"late 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"b"
 #"lack\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point "
 #"300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 170 170 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 "
 #"0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 "
 #"0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #("
 #"struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 182.5 225.0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(str"
 #"uct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struc"
 #"t:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0"
 #" 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 9."
 #"0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 1"
 #"0 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 170 210 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #"
 #"(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0"
 #" 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:p"
 #"oint 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 179.5 265.0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f s"
 #"wiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:transla"
 #"te 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal norm"
 #"al #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 170 250 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pull"
 #"ed-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point "
 #"300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 219.5 25.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0."
 #"0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:tra"
 #"nslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal "
 #"normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5."
 #"0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 210 10 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0"
 #" 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0"
 #") #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 219.5 65.0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(stru"
 #"ct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct"
 #":translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 "
 #"1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 9.0"
 #" 0.0 #(struct:translate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" 10"
 #" #f swiss normal normal #f))))) #(struct:translate 15.0 0.0 #(struct"
 #":translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:poin"
 #"t 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 210 50 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-"
 #"point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Whit"
 #"e\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 222.5 105.0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"bl"
 #"ack\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(s"
 #"truct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 210 90 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0"
 #" 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #("
 #"struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poi"
 #"nt 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 219.5 145.0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5"
 #".0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #" #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text"
 #" \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"3\" 0 1 \"b"
 #"lack\" 10 #f swiss normal normal #f))))) #(struct:translate 15.0 0.0"
 #" #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f "
 #"swiss normal normal #f))))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(st"
 #"ruct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 210 130 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"255 \"White\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point "
 #"0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 2"
 #"22.5 185.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0"
 #" #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f)))))"
 #" #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:text"
 #" \"3\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #"
 #"(struct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 210 170 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:p"
 #"ulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:poi"
 #"nt 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 219.5 225.0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate 6."
 #"0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 1"
 #"0 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(struct"
 #":translate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3."
 #"0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f"
 #"))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 210 210 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(str"
 #"uct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 216.5 265.0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"bl"
 #"ack\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(s"
 #"truct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(s"
 #"truct:text \"7\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 21.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"5\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 210 250 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pull"
 #"ed-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point "
 #"300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 267.0 25.0 #(struct:translate 3.0 5.0 #(struc"
 #"t:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:"
 #"translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 "
 #"0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 250 10 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:"
 #"point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 259.5 65.0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0"
 #"\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate "
 #"6.0 0.0 #(struct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\""
 #" 10 #f swiss normal normal #f))))) #(struct:translate 9.0 0.0 #(stru"
 #"ct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate "
 #"3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal "
 #"#f))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 250 50 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 262.5 105.0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f"
 #" swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:trans"
 #"late 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #"
 #"(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 250 90 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #"
 #"(struct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 256.5 145.0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10"
 #" #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:tr"
 #"anslate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal"
 #" normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5."
 #"0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))"
 #") #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:te"
 #"xt \"2\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 21.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 "
 #"\"black\" 10 #f swiss normal normal #f))))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:poi"
 #"nt 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 250 130 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300)"
 #" #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 262.5 185.0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 3.0 5.0 #("
 #"struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(st"
 #"ruct:translate 6.0 0.0 #(struct:t"
 #"ranslate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5"
 #".0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal normal #f)))"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 250 170 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40"
 #" 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300"
 #" 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 256.5 225.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black"
 #"\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(stru"
 #"ct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translate 3"
 #".0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal normal #"
 #"f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 5.0 #(stru"
 #"ct:text \"2\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 21.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\""
 #" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struc"
 #"t:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 250 210 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-"
 #"point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 300"
 #" 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 267.0 265.0 #(struct:translate 3.0 5.0 #(struct:"
 #"text \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0)"
 #" #(struct:point 300 300) #(struct:point 0 300)) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 250 250 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) 255 \"White\"))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 300 0 0 0) #(struct:pulled-point "
 #"0 0 300 300 0 0) #(struct:pulled-point 0 0 0 300 0 0)) 255 \"White\""
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #")))))))))))))))))))))))))))))))))))))))))))))) #(struct:bb 300 300 3"
 #"00.0) #f)"
) 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 11 #"draw-blocks"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 46 #"                                             ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 28 #"                           ("
0 0 17 3 8 #"make-wol"
0 0 17 3 17 #" \"underway\" -100)"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";                           \"cheat\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 1611
(13
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 107.0 145.0 #(struct:translate 3.0 5.0 #"
 #"(struct:text \"3\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 90 130 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #"
 #"(struct:pulled-point 0 0 0 40 0 0)) 255 \"Grey\"))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(st"
 #"ruct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 107.0 185.0 #(struct:translate 3.0"
 #" 5.0 #(struct:text \"4\" 0 1 \"black\" 10 #f swiss normal normal #f)"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 90 170 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 "
 #"0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Blue\"))) #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 300 0 0 0) #(struct:p"
 #"ulled-point 0 0 300 300 0 0) #(struct:pulled-point 0 0 0 300 0 0)) 2"
 #"55 \"White\")))))))))))))))))) #(struct:bb 300 300 300.0) #f)"
) 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;draw-revealed-blocks : Board Mode -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;To draw the revealed block in the map"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;Strategy: Struct Decomp"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"draw-revealed-blocks"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"normal\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"draw-normal"
0 0 24 3 2 #" ("
0 0 14 3 10 #"board-head"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"board-body"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 14 #"board-revealed"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"possibility\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 2 #" ("
0 0 14 3 17 #"update-view-model"
0 0 24 3 2 #" ("
0 0 14 3 14 #"board-revealed"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 18 #"prepare-view-model"
0 0 24 3 2 #" ("
0 0 14 3 14 #"board-revealed"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 72
(14
 #"                                                                    "
 #"   ("
) 0 0 14 3 18 #"convert-to-percent"
0 0 24 3 2 #" ("
0 0 14 3 10 #"board-head"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 92
(15
 #"                                                                    "
 #"                       ("
) 0 0 14 3 10 #"board-body"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 92 15 0 0 14 3 14 #"board-revealed"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 11 #"POSN-OF-MAP"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"draw-poss"
0 0 24 3 2 #" ("
0 0 14 3 10 #"board-head"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"board-body"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"board-revealed"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"draw-each-poss"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"draw-cheat"
0 0 24 3 2 #" ("
0 0 14 3 10 #"board-head"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"board-body"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"board-revealed"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 12 #"count-amount"
0 0 24 3 2 #" ("
0 0 14 3 10 #"board-head"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 10 #"board-body"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 14 #"board-revealed"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 20 #"draw-revealed-blocks"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";                                    \"possibility\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 53336 12 0 0 17 3 3 #")  "
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 20 #"draw-revealed-blocks"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-board"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 49 #"                                                ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 55 #"                                                      ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";                                    \"cheat\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 1611 13 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; An info is:"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; (make-revealed-info Number Block-content Board-POSN)"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; (make-covered-info Number Board-POSN)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(16
 #"; draw-poss : Board-Posn [Listof Board-Posn] [Listof Board-Posn] [Li"
 #"stof "
) 0 0 17 3 15 #"Image] [Listof "
0 0 17 3 12 #"View-model] "
0 0 17 3 8 #"-> Image"
0 0 24 29 1 #"\n"
0 0 17 3 74
(17
 #"; given board and list of pictures of possibility and list of view m"
 #"odel, "
) 0 0 17 3 17 #"return the image "
0 0 17 3 32 #"arranging all the posssibilities"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 13 #"COVERED-BLOCK"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"draw-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"equal-posn?"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"HEAD"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"draw-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #") "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 10 #"find-body?"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"BODY"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"draw-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #") "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 10 #"find-body?"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"equal-posn?"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 11 #"EMPTY-BLOCK"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"draw-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #") "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 13 #"COVERED-BLOCK"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"draw-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 20 #"draw-poss (make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 26 #"                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 26 #"                         ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 2 4))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 26 #"                         ("
0 0 17 3 14 #"draw-each-poss"
0 0 17 3 2 #" ("
0 0 17 3 17 #"update-view-model"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 66
#"                                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 2 4))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 60
#"                                                            "
0 0 17 3 1 #"("
0 0 17 3 18 #"prepare-view-model"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 5 #"2 4))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 34 #"                                  "
0 0 17 3 1 #"("
0 0 17 3 18 #"convert-to-percent"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 29 #"                             "
0 0 17 3 1 #"("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 5 #"4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 29 #"                             "
0 0 17 3 1 #"("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 24 #"                        "
0 0 17 3 1 #" "
0 0 17 3 2 #"  "
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 32 #"                               ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 6 #" 4))))"
0 0 24 29 1 #"\n"
0 0 17 3 74
(18
 #";                                                            POSN-OF"
 #"-MAP))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 26 #"                         ("
0 0 17 3 17 #"update-view-model"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 51 #"                                                  ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 2 4))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                            ("
0 0 17 3 18 #"prepare-view-model"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 70
(19
 #"                                                                    "
 #"  "
) 0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 2 4))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 64
#"                                                                "
0 0 17 3 1 #"("
0 0 17 3 18 #"convert-to-percent"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 3 #" 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 39 #"                                      ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 5 #"4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 39 #"                                      ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 44 #"                                            "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 7 #"2 4))))"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                            POSN-OF-MAP))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 6           4 17 53336 12 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";draw-each-poss : [Listof View-mode] -> [Listof Image]"
0 0 24 29 1 #"\n"
0 0 17 3 76
(20
 #";gives a list of view model, returns the list of images of all possi"
 #"bilities"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"draw-each-poss"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"for*/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 17 #"covered-info-poss"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 11 #"NUMBER-SIZE"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 12 #"NUMBER-COLOR"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 14 #"draw-each-poss"
0 0 17 3 3 #"  ("
0 0 17 3 17 #"update-view-model"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 57 #"                                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 2 4))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 51 #"                                                  ("
0 0 17 3 18 #"prepare-view-model"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 31 #"                              ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 2 4))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 70 19 0 0 17 3 1 #"("
0 0 17 3 18 #"convert-to-percent"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 4 #"3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 45 #"                                            ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 45 #"                                            ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 45 #"                                             "
0 0 17 3 1 #" "
0 0 17 3 50 #"                                                  "
0 0 17 3 1 #"("
0 0 17 3 9 #"make-posn"
0 0 17 3 8 #" 2 4))))"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";                                                  POSN-OF-MAP))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 6           4 17 127
(21
 #"(#(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f "
 #"swiss normal normal #f)) #(struct:bb 6.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 603
(22
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(st"
 #"ruct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 9.0 0.0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #")) #(struct:bb 21.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 762
(23
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate"
 #" 6.0 0.0 #(struct:translate 1.5 "
 #"5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"1\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 21.0"
 #" 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10"
 #" #f swiss normal normal #f)))) #(struct:bb 27.0 10.0 7.7001953125) #"
 #"f)"
) 0 0 17 3 1 #" "
0 6           4 17 603
(24
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(st"
 #"ruct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 9.0 0.0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #")) #(struct:bb 21.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 762 23 0 0 17 3 1 #" "
0 6           4 17 603 22 0 0 17 3 1 #" "
0 6           4 17 127 21 0 0 17 3 1 #" "
0 6           4 17 603 22 0 0 17 3 1 #" "
0 6           4 17 603 24 0 0 17 3 1 #" "
0 6           4 17 444
(25
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"bl"
 #"ack\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(s"
 #"truct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f)))) #(struct:bb 15.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 603
(26
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(st"
 #"ruct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 9.0 0.0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"3\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #")) #(struct:bb 21.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 444 25 0 0 17 3 1 #" "
0 6           4 17 603 24 0 0 17 3 1 #" "
0 6           4 17 603 22 0 0 17 3 1 #" "
0 6           4 17 762 23 0 0 17 3 1 #" "
0 6           4 17 444 25 0 0 17 3 1 #" "
0 6           4 17 603
(27
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(st"
 #"ruct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 9.0 0.0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #")) #(struct:bb 21.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 444 25 0 0 17 3 1 #" "
0 6           4 17 762 23 0 0 17 3 1 #" "
0 6           4 17 603 24 0 0 17 3 1 #" "
0 6           4 17 603 26 0 0 17 3 1 #" "
0 6           4 17 603
(28
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss normal nor"
 #"mal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.5 5.0 #(st"
 #"ruct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 9.0 0.0 #(struct:t"
 #"ranslate 3.0 5.0 #(struct:text \"6\" 0 1 \"black\" 10 #f swiss norma"
 #"l normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3.0 "
 #"5.0 #(struct:text \"5\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #")) #(struct:bb 21.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 444
(29
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"bl"
 #"ack\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(s"
 #"truct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"8\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f)))) #(struct:bb 15.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 603 28 0 0 17 3 1 #" "
0 6           4 17 603 26 0 0 17 3 1 #" "
0 6           4 17 603 24 0 0 17 3 1 #" "
0 6           4 17 762 23 0 0 17 11 1 #" "
0 6           4 17 444 25 0 0 17 3 1 #" "
0 6           4 17 603 27 0 0 17 3 1 #" "
0 6           4 17 603 28 0 0 17 3 1 #" "
0 6           4 17 603 27 0 0 17 3 1 #" "
0 6           4 17 444 25 0 0 17 3 1 #" "
0 6           4 17 603 24 0 0 17 3 1 #" "
0 6           4 17 603 22 0 0 17 3 1 #" "
0 6           4 17 603 24 0 0 17 3 1 #" "
0 6           4 17 444 25 0 0 17 3 1 #" "
0 6           4 17 603 26 0 0 17 3 1 #" "
0 6           4 17 444 25 0 0 17 3 1 #" "
0 6           4 17 603 24 0 0 17 3 1 #" "
0 6           4 17 762
(30
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate"
 #" 6.0 0.0 #(struct:translate 1.5 "
 #"5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"7\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 21.0"
 #" 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10"
 #" #f swiss normal normal #f)))) #(struct:bb 27.0 10.0 7.7001953125) #"
 #"f)"
) 0 0 17 3 1 #" "
0 6           4 17 127 21 0 0 17 3 1 #" "
0 6           4 17 603 22 0 0 17 3 1 #" "
0 6           4 17 444
(31
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 3.0 5.0 #(struct:text \"0\" 0 1 \"bl"
 #"ack\" 10 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(s"
 #"truct:translate 1.5 5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swis"
 #"s normal normal #f))))) #(struct:translate 9.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"1\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f)))) #(struct:bb 15.0 10.0 7.7001953125) #f)"
) 0 0 17 3 1 #" "
0 6           4 17 762 23 0 0 17 3 1 #" "
0 6           4 17 444 31 0 0 17 3 1 #" "
0 6           4 17 762
(32
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 3.0 5.0 #(struct:text \""
 #"0\" 0 1 \"black\" 10 #f swiss normal normal #f))) #(struct:translate"
 #" 6.0 0.0 #(struct:translate 1.5 "
 #"5.0 #(struct:text \".\" 0 1 \"black\" 10 #f swiss normal normal #f))"
 #"))) #(struct:translate 9.0 0.0 #(struct:translate 3.0 5.0 #(struct:t"
 #"ext \"0\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 15.0 0.0 #(struct:translate 3.0 5.0 #(struct:text \"2\" 0 1"
 #" \"black\" 10 #f swiss normal normal #f))))) #(struct:translate 21.0"
 #" 0.0 #(struct:translate 3.0 5.0 #(struct:text \"5\" 0 1 \"black\" 10"
 #" #f swiss normal normal #f)))) #(struct:bb 27.0 10.0 7.7001953125) #"
 #"f)"
) 0 0 17 3 1 #" "
0 6           4 17 127 21 0 0 17 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";update-view-model : [Listof Board-POSN] [Listof View-mode] [Listof "
0 0 17 3 32 #"Board-POSN]-> [Listof Viewmodel]"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";returns the view model without the revealed blocks"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";strategy: functional decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"update-view-model"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"revealed?"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #" ("
0 0 14 3 23 #"covered-info-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"update-view-model"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 3 #"pom"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 17 #"update-view-model"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 18 #"list-of-view-model"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 3 #"pom"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(33
 #";prepare-view-model : [Listof Board-POSN] [Listof Number] -> [Listof"
 #" View-mode]"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(34
 #";given list of percentage, returns list of view model contains the p"
 #"ercentage "
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";strategy: functional decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"prepare-view-model"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 1 #" "
0 0 14 3 15 #"list-of-percent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"posn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"make-covered-info"
0 0 24 3 1 #" "
0 0 14 3 4 #"poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"posn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 15 #"list-of-percent"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 11 #"POSN-OF-MAP"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 93
(35
 #"; convert-to-percent : Board-POSN [Listof Board-POSN] [Listof Board-"
 #"POSN] ->  [Listof Number]"
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #"; returns a list of the percentage of all the blocks."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-to-percent"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 21 3 4 #"40.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 17 #"every-amount-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 1 #" "
0 0 14 3 11 #"POSN-OF-MAP"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 18 #"convert-to-percent"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 35 #"                                  ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 35 #"                                  ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 41 #"                                        ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";              '(0"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.05"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.125"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.15"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.125"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.05"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";                0"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.05"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.15"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.3"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.35"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.3"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.15"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.05"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.125"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.3"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.55"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.675"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.55"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.3"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.125"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.15"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.35"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.65"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.8"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.65"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.35"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.15"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.125"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.3"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.55"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.65"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.55"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.3"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.15"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.05"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.15"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.3"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.35"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.3"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.15"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.075"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";                0"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";                0.05"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.1"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.125"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0.1"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";                0.025"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";                0))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(36
 #"; every-amount-test : Board-POSN [Listof Board-POSN] [Listof Board-P"
 #"OSN] "
) 0 0 17 3 23 #"[Listof Board-POSN] -> "
0 0 17 3 15 #"[Listof Number]"
0 0 24 29 1 #"\n"
0 0 17 3 70
(37
 #"; returns a list of number of how many airplane each block could hav"
 #"e "
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"every-amount-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"revealed?"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 10 #"find-body?"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"minuseach"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counting-test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 17 #"every-amount-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"revealed?"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 10 #"find-body?"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"addeach"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counting-test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 17 #"every-amount-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counting-test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 17 #"every-amount-test"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 2 #" ("
0 0 17 3 17 #"every-amount-test"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 34 #"                                 ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 34 #"                                 ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                       ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 2 4))"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";                                 POSN-OF-MAP)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 2 #"2 "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 2 #"14"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 2 #"22"
0 0 17 3 1 #" "
0 0 17 3 2 #"27"
0 0 17 3 1 #" "
0 0 17 3 2 #"22"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 2 #"14"
0 0 17 3 1 #" "
0 0 17 3 2 #"26"
0 0 17 3 1 #" "
0 0 17 3 2 #"32"
0 0 17 3 1 #" "
0 0 17 3 2 #"26"
0 0 17 3 1 #" "
0 0 17 3 2 #"14"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 2 #"22"
0 0 17 3 1 #" "
0 0 17 3 2 #"26"
0 0 17 3 1 #" "
0 0 17 3 2 #"22"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 2 #"14"
0 0 17 3 1 #" "
0 0 17 3 2 #"12"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 11 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 6 #" 1 0))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; minuseach : [Listof Number] -> [Listof Number]"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; minues one to each elements of the list "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"minuseach"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 1 #"l"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"minuseach"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; addeach : [Listof Number] -> [Listof Number]"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; add one to each elements of the list "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"addeach"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 1 #"l"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"addeach"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; test : [Listof Board-POSN] -> [Listof Number]"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; returns initial possibility of all the blocks"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";(define (test pom)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";    [(empty? pom) '()]"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";    [else"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";     (append (list (counting-test (first pom) 0 0))"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";             (test (rest pom)))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; counting-test : Board-POSN Number Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; count how many airplanes the given posn could have"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; strategy : functional composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counting-test"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 14 3 5 #"check"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"valid1"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"valid2"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"valid3"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"valid4"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"valid5"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"valid6"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"valid7"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"valid8"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"valid9"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"valid10"
0 0 24 3 1 #" "
0 0 14 3 3 #"pom"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";(draw-normal (make-posn 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";               (list (make-posn 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                     (make-posn 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                     (make-posn 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                     (make-posn 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                     (make-posn 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                     (make-posn 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                     (make-posn 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";                     (make-posn 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";                     (make-posn 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";               (list (make-posn 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";                     (make-posn 2 4)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 4 #"draw"
0 0 17 3 2 #" ("
0 0 17 3 42 #"mouse (make-am (make-board (make-posn 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                    (list (make-posn 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                          (make-posn 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                          (make-posn 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                          (make-posn 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                          (make-posn 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                          (make-posn 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                          (make-posn 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                          (make-posn 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";                                          (make-posn 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";                                    (list (make-posn 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";                                          (make-posn 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";                        \"normal\""
0 0 24 29 1 #"\n"
0 0 17 3 26 #";                        0"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";                        8"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";                        \"underway\")"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";               245"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";               245"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";               \"button-down\"))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 6           4 17 16528
(38
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 10 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 4"
 #"0 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))"
 #") #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 0 40 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"b"
 #"lack\"))) #(struct:translate 40 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 80 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 "
 #"40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) "
 #"#(struct:translate 120 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 160 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 200 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 240 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:trans"
 #"late 0 80 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate "
 #"40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bla"
 #"ck\"))))) #(struct:translate 80 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 160 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"black\"))))) #(struct:translate 200 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0)"
 #" #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struc"
 #"t:translate 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))))) #(struct:translate 0 120 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))) #(struct:translate 40 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:p"
 #"ulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate"
 #" 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bl"
 #"ack\"))))) #(struct:translate 120 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 160 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 "
 #"40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))"
 #")) #(struct:translate 200 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0"
 #" 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0"
 #" 40 0 0)) outline \"black\"))))) #(struct:translate 240 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))))) #(s"
 #"truct:translate 0 160 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 "
 #"0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struc"
 #"t:translate 40 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 80 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:"
 #"pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translat"
 #"e 120 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-"
 #"point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \""
 #"black\"))))) #(struct:translate 160 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-p"
 #"oint 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 200 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 "
 #"0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")"
 #")))) #(struct:translate 240 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 200 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0"
 #") #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(stru"
 #"ct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"outline \"black\"))))) #(struct:translate 120 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transl"
 #"ate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline "
 #"\"black\"))))) #(struct:translate 200 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled"
 #"-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:translate 240 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point "
 #"0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate 0 240"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-po"
 #"int 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 40 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40"
 #" 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\")))))"
 #" #(struct:translate 80 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40"
 #" 0 0)) outline \"black\"))))) #(struct:translate 120 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct"
 #":translate 160 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) o"
 #"utline \"black\"))))) #(struct:translate 200 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct"
 #":pulled-point 0 0 0 40 0 0)) outline \"black\"))))) #(struct:transla"
 #"te 240 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled"
 #"-point 0 0 40 40 0 0) #(struct:pul"
 #"led-point 0 0 0 40 0 0)) outline \"black\"))))))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(stru"
 #"ct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 147.0 0.0 #(struct:translate 3.0 5.0"
 #" #(struct:text \"7\" 0 1 \"black\" 10 #f swiss normal normal #f))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 292.0 0.0 #(struct:"
 #"translate 3.0 5.0 #(struct:text \"0\" 0 1 \"black\" 10 #f swiss norm"
 #"al normal #f))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0"
 #" 300)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 14"
 #".5 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 3.0 5.0 #(struct:text \"n\" 0 1 \"black\" 10 #"
 #"f swiss normal normal #f))) #(struct:translate 6.0 0.0 #(struct:tran"
 #"slate 3.0 5.0 #(struct:text \"o\" 0 1 \"black\" 10 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 12.0 0.0 #(struct:translate 1.5 5.0"
 #" #(struct:text \"r\" 0 1 \"black\" 10 #f swiss normal normal #f)))))"
 #" #(struct:translate 15.0 0.0 #(struct:translate 4.0 5.0 #(struct:tex"
 #"t \"m\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 23.0 0.0 #(struct:translat"
 #"e 3.0 5.0 #(struct:text \"a\" 0 1 \"black\" 10 #f swiss normal norma"
 #"l #f))))) #(struct:translate 29.0 0.0 #(struct:translate 1.0 5.0 #(s"
 #"truct:text \"l\" 0 1 \"black\" 10 #f swiss normal normal #f))))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 300 0) #(struct:point 300 300) #(struct:point 0 300)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 210 210 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) "
 #"#(struct:pulled-point 0 0 0 40 0 0)) 255 \"Grey\"))) #(struct:transl"
 #"ate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(s"
 #"truct:point 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 90 130 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pull"
 #"ed-point 0 0 0 40 0 0)) 255 \"Grey\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:point 3"
 #"00 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 90 170 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 "
 #"0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 "
 #"0 40 0 0)) 255 \"Blue\"))) #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 300 0 0 0) #(struct:pulled-point 0 0 300 300 0 0) #("
 #"struct:pulled-point 0 0 0 300 0 0)) 255 \"White\")))))))))))))))))))"
 #"))))))))))) #(struct:bb 300 300 300.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(39
 #";draw-normal : Board-POSN [Litsof Board-POSN] [Litsof Board-POSN] ->"
 #" Image"
) 0 0 24 29 1 #"\n"
0 0 17 3 23 #";;To draw normal blocks"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;Strategy: Struct Decomp"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-normal"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"equal-posn?"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"HEAD"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"draw-normal"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 10 #"find-body?"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"BODY"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"draw-normal"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 11 #"EMPTY-BLOCK"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 18 #"convert-board-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"draw-normal"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 8 #"revealed"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-equal?"
0 0 17 3 1 #"("
0 0 17 3 11 #"draw-normal"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 27 #"                          ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 1 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 4 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 5 4)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 5)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 3 6)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 6 #" 4 6))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 27 #"                          ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 5 #" 2 3)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                                ("
0 0 17 3 9 #"make-posn"
0 0 17 3 7 #" 2 4)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 13 #"             "
0 6           4 17 1027 11 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0           0
